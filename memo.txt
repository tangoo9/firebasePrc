[1]firebase 서비스
FireStore = DB
Function = serverless fuction , aws의 lambda 와 같다.
Storage = 파일저장소, aws의 S3과 같다.
hosting = 호스팅,배포
authentication = 인증기능
realtime database = 리얼타임 DB


[2].env 설정 
create-react-app으로 생성한 경우 
env의 이름은 
REACT_APP_~~~형식을 지켜야함.
(REACT_APP_API_KEY)


[3] Rotuer
### exact
exact 붙여주면 정확히 일치할때 보임.

예를들어 exact를 제거하고 
path="/" , path="/about" 으로 라우터 2개 만들었으면, /about에서도 /의 router가 보임.
=> path="/"면 exact 붙이자.

### HashRouter 
주소에 #이 붙음
정적인 페이지에 적합
검색엔진으로 읽지못함
새로고침시 에러 안남
github pages설정이 간편(배포)



[4]firebase login with Email,password

4-1.
createUserWithEmailAndPassword(email, password);
signInWithEmailAndPassword(email, password);

//공식문서, https://firebase.google.com/docs/auth/web/start?hl=ko&authuser=0

4-2.setPersistence (인증상태 지속성) local, session , none이 있음
https://firebase.google.com/docs/auth/web/auth-state-persistence?authuser=0


4-3. onAuthStateChanged
사용자 로그인 상태 변화를 관찰함, (로그인 로그아웃등 감지)
https://firebase.google.com/docs/reference/js/auth.auth?authuser=0


4-4. GoogleAuthProvider, GithubAuthProvider
소셜 아이디로 로그인하는 방법
provider = new GoogleAuthProvider ... 같이 가져와주고
signInWithPopup ... 로그인 팝업창을 띄워줄 수 있음.

4-5.로그아웃 하기
매우 심플
import { authService } from '../fbase'
authService.signOut();


[5] react-router-dom
리다이렉트 부분을 현재 버전에서는 useHistory, Redirect를 이용하여 아래와 같이 쓰는데, ("react-router-dom": "^5.3.0")

.....
<Redirect from="*" to="/"/>

const history = useHistory();
history.push("/")
.....

react-router-dom v6 이상부터는 useHistory, Redirect는 삭제됨.
=> useNavigate(hook), Navigate(component)를 사용해야함.
https://ui.dev/react-router-programmatically-navigate/

[6] firestore
firebase v9 이상..
import { getFirestore } from "firebase/firestore";
export const dbService = getFirestore();

[6-1] //collection, addDoc

addDoc : create 담당

https://firebase.google.com/docs/reference/js/firestore_.md?authuser=0&hl=ko#adddoc
import { addDoc, collection } from 'firebase/firestore';

//이런형태로 코드 사용, (async await)
const docRef = await addDoc(collection(dbService, "nweets"), {
    nweet,
    createdAt: Date.now(),
    });
console.log("Document written with ID: ", docRef.id);


[6-2]querysnapshot , getDocs

※ onSnapshot()으로 이벤트 수신, 아래같은 형태

const q = query(
    collection(dbService, "nweets"),
    orderBy("createdAt", "desc")
    );
    onSnapshot(q, (snapshot) => {
    const nweetArray = snapshot.docs.map((doc) => ({
    id: doc.id,
    ...doc.data(),
    }));
            

querysnapshot : 
    - properties : docs, metadata, size, empty, query 
    - methods : docChanges ,forEach, isEqual

getDocs : read 담당

import { getDocs, query } from 'firebase/firestore';
https://firebase.google.com/docs/reference/js/firestore_.querysnapshot?hl=ko&authuser=0


★★querySnapshot 예제문서★★
https://firebase.google.com/docs/firestore/query-data/listen?authuser=0&hl=ko#web-version-9_3


[6-3] deleteDoc, updateDoc
import { doc, deleteDoc, updateDoc }from"firebase/firestore";

//아래와 같이 리터럴 호출
const nweetDocRef = doc(dbService, "nweets", `${nweetObj.id}`)

//delete
await deleteDoc(nweetDocRef)

//update
await updateDoc(nweetDocRef,{text :newNweet})


[6-4] Image 업로드
//FileReader API...
https://developer.mozilla.org/en-US/docs/Web/API/FileReader

//firebase Storage
import { getStorage } from "firebase/storage";
...
import { ref, uploadString } from 'firebase/storage';
...
const fileRef = ref(storageService, `${userObj.uid}/${v4()}`);
const response = await uploadString(fileRef, imageFile, "data_url");

[6-5] Image 화면에 출력
//getDownloadURL
//https://firebase.google.com/docs/reference/js/storage.md?authuser=0&hl=ko#ref

import { getDownloadURL } from 'firebase/storage';
...
let AttachmentUrl ="";
//첨부파일이 없을때
if(attachment !== ""){
    // 파일경로참조 만들기 userObj.uid/${이부분은 파일명}
    const fileRef = ref(storageService, `${userObj.uid}/${v4()}`);
    //storage 참조경로로 파일 업로드
    const response = await uploadString(fileRef, attachment, "data_url");
    //storage의 파일 url로 다운로드
    AttachmentUrl = await getDownloadURL(response.ref)

}
const nweetPost = {
    text:nweet,
    createdAt: Date.now(),
    creatorId: userObj.uid,
    AttachmentUrl,
}


//Storage Rules 탭 설정 ... read,write 부분 기본적으로 if false인데 그럼 동작안함.
rules_version = '2';
service firebase.storage {
    match /b/{bucket}/o {
        match /{allPaths=**} {
        allow read, write: if request.auth != null;
        }
    }
}



[uuid] 랜덤 unique id를 생성해줌
https://www.npmjs.com/package/uuid

[bug]
router 변경 이벤트시 화면이 실시간으로 바뀌지 않는문제 (router 5.3.0, react18간의 호환문제) 
react-router-dom => v5.3.3 에서 버그 수정됨.
https://stackoverflow.com/questions/71832720/link-tag-inside-browserrouter-changes-only-the-url-but-doesnt-render-the-compo